var a=Object.defineProperty;var i=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var d=(s,e)=>{for(var o in e)a(s,o,{get:e[o],enumerable:!0})},g=(s,e,o,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of l(e))!S.call(s,r)&&r!==o&&a(s,r,{get:()=>e[r],enumerable:!(n=i(e,r))||n.enumerable});return s};var m=s=>g(a({},"__esModule",{value:!0}),s);var O={};d(O,{challengeHandler:()=>R});module.exports=m(O);var c=require("crypto"),t=require("@aws-sdk/client-cognito-identity-provider"),C=new t.CognitoIdentityProviderClient({region:"us-east-1"}),R=async s=>{let e=JSON.parse(s.body);console.log("CREDENTIALS:",JSON.stringify(e,null,2));let o={ChallengeName:"NEW_PASSWORD_REQUIRED",ClientId:process.env.COGNITO_ID,ChallengeResponses:{USERNAME:e.USER_ID_FOR_SRP,NEW_PASSWORD:e.newPassword,SECRET_HASH:E(process.env.COGNITO_ID,process.env.COGNITO_SECRET,e.USER_ID_FOR_SRP)},Session:e.Session};console.log("params:",JSON.stringify(o,null,2));try{let n=new t.RespondToAuthChallengeCommand(o),r=await C.send(n);return console.log("Autenticado com sucesso:",r),{statusCode:200,body:JSON.stringify(r)}}catch(n){return console.error("Erro ao responder ao desafio:",n),{statusCode:500,body:JSON.stringify({message:n.message})}}};function E(s,e,o){let n=o+s;return(0,c.createHmac)("sha256",e).update(n).digest("base64")}0&&(module.exports={challengeHandler});
//# sourceMappingURL=index.js.map
